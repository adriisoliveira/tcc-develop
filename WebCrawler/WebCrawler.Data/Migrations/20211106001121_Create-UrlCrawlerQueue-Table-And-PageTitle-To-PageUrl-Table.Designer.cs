// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebCrawler.Data.DataContext;

namespace WebCrawler.Data.Migrations
{
    [DbContext(typeof(WebCrawlerDataContext))]
    [Migration("20211106001121_Create-UrlCrawlerQueue-Table-And-PageTitle-To-PageUrl-Table")]
    partial class CreateUrlCrawlerQueueTableAndPageTitleToPageUrlTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebCrawler.Business.Entities.PageRank", b =>
                {
                    b.Property<Guid>("PageUrlId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PageUrlId");

                    b.Property<DateTime>("LastRanking")
                        .HasColumnType("datetime2");

                    b.Property<float>("Ponctuation")
                        .HasColumnType("real");

                    b.HasKey("PageUrlId");

                    b.ToTable("PageRanks");
                });

            modelBuilder.Entity("WebCrawler.Business.Entities.PageUrl", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PageUrlId");

                    b.Property<DateTime?>("LastIndexing")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(2048)
                        .HasColumnType("nvarchar(2048)");

                    b.Property<DateTime>("WhenCreated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PageUrls");
                });

            modelBuilder.Entity("WebCrawler.Business.Entities.PageUrlPageWord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PageUrlPageWordId");

                    b.Property<Guid>("PageUrlId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PageWordId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("WhenCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("WhenUpdated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PageUrlId");

                    b.HasIndex("PageWordId");

                    b.ToTable("PageUrlPageWords");
                });

            modelBuilder.Entity("WebCrawler.Business.Entities.PageUrlRelation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PageUrlRelationId");

                    b.Property<Guid>("PageUrlDestinationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PageUrlOriginId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("WhenCreated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PageUrlDestinationId");

                    b.HasIndex("PageUrlOriginId");

                    b.ToTable("PageUrlRelations");
                });

            modelBuilder.Entity("WebCrawler.Business.Entities.PageWord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PageWordId");

                    b.Property<DateTime>("WhenCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Word")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("PageWords");
                });

            modelBuilder.Entity("WebCrawler.Business.Entities.PageWordLocalization", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PageWordLocalizationId");

                    b.Property<int>("Localization")
                        .HasColumnType("int");

                    b.Property<Guid>("PageUrlId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("PageWordId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("WhenCreated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PageUrlId");

                    b.HasIndex("PageWordId");

                    b.ToTable("PageWordLocalizations");
                });

            modelBuilder.Entity("WebCrawler.Business.Entities.UrlCrawlerQueue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UrlCrawlerQueueId");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("WhenCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("WhenQueued")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("UrlCrawlerQueue");
                });

            modelBuilder.Entity("WebCrawler.Business.Entities.PageRank", b =>
                {
                    b.HasOne("WebCrawler.Business.Entities.PageUrl", "PageUrl")
                        .WithOne("Rank")
                        .HasForeignKey("WebCrawler.Business.Entities.PageRank", "PageUrlId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PageUrl");
                });

            modelBuilder.Entity("WebCrawler.Business.Entities.PageUrlPageWord", b =>
                {
                    b.HasOne("WebCrawler.Business.Entities.PageUrl", "PageUrl")
                        .WithMany("Words")
                        .HasForeignKey("PageUrlId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebCrawler.Business.Entities.PageWord", "PageWord")
                        .WithMany("Urls")
                        .HasForeignKey("PageWordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PageUrl");

                    b.Navigation("PageWord");
                });

            modelBuilder.Entity("WebCrawler.Business.Entities.PageUrlRelation", b =>
                {
                    b.HasOne("WebCrawler.Business.Entities.PageUrl", "PageUrlDestination")
                        .WithMany()
                        .HasForeignKey("PageUrlDestinationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebCrawler.Business.Entities.PageUrl", "PageUrlOrigin")
                        .WithMany("RelatedUrls")
                        .HasForeignKey("PageUrlOriginId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PageUrlDestination");

                    b.Navigation("PageUrlOrigin");
                });

            modelBuilder.Entity("WebCrawler.Business.Entities.PageWordLocalization", b =>
                {
                    b.HasOne("WebCrawler.Business.Entities.PageUrl", "PageUrl")
                        .WithMany()
                        .HasForeignKey("PageUrlId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebCrawler.Business.Entities.PageWord", "PageWord")
                        .WithMany()
                        .HasForeignKey("PageWordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PageUrl");

                    b.Navigation("PageWord");
                });

            modelBuilder.Entity("WebCrawler.Business.Entities.PageUrl", b =>
                {
                    b.Navigation("Rank");

                    b.Navigation("RelatedUrls");

                    b.Navigation("Words");
                });

            modelBuilder.Entity("WebCrawler.Business.Entities.PageWord", b =>
                {
                    b.Navigation("Urls");
                });
#pragma warning restore 612, 618
        }
    }
}
